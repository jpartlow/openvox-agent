name: Acceptance Tests

on:
  workflow_dispatch:
    inputs:
      pre-release-build:
        description: |-
          Whether to test unreleased version packages from the
          artifacts server, or released packages from the given
          collection.

          If this is true, version must be a valid version, not
          latest, and collection is ignored. The workflow will
          download and install the matching openvox-agent package file
          from the artifacts-url server.

          If this is false, version and collection must match, and the
          workflow will install the given openvox collection package
          and then let the system package manager install the latest
          or version package from the collection repository.
        default: true
        type: boolean
      version:
        description: 'Package version to test. (required if pre-release-build is true)'
        type: string
      collection:
        description: 'OpenVox collection to use. (ignored if pre-release-build is true)'
        default: 'openvox8'
        type: string
      artifacts-url:
        description: 'URL to the artifacts server. (used if pre-release-build is true)'
        default: 'https://s3.osuosl.org/openvox-artifacts'
        type: string

permissions:
  contents: read

env:
  RUBY_VERSION: '3.3'

jobs:
  acceptance:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu
        os-version:
          - '18.04'
          - '20.04'
          - '22.04'
          - '24.04'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: vm-cluster
        uses: jpartlow/kvm_automation_tooling@main
        with:
          os: ${{ matrix.os }}
          os-version: ${{ matrix.os-version }}
          os-arch: x86_64
          host-root-access: true
          ruby-version: ${{ env.RUBY_VERSION }}
          install-openvox: true
          openvox-version: ${{ github.event.inputs.version }}
          openvox-collection: ${{ github.event.inputs.collection }}
          openvox-released: ${{ github.event.inputs.released }}
          openvox-artifacts-url: ${{ github.event.inputs.artifacts-url }}
          vms: |-
            [
              {
                "role": "agent",
                "count": 1,
                "cpus": 2,
                "mem_mb": 4096
              }
            ]
      - name: Install Ruby and Run Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          working-directory: acceptance
          bundler-cache: true
      - name: Construct hosts.yaml
        working-directory: kvm_automation_tooling
        env:
          HOSTS_YAML: ${{ github.workspace }}/acceptance/hosts.yaml
        run: |-
          bundle exec bolt plan run \
            kvm_automation_tooling::dev::generate_beaker_hosts_file \
            --inventory terraform/instances/inventory.*.yaml \
            hosts_yaml="${HOSTS_YAML}"
      - name: Run Beaker
        working-directory: acceptance
        run: |-
          # TODO The ssh keyfile here is from the kvm_automation_tooling
          # action...this should be cleaned up to be more discoverable
          # or supplied as an input perhaps.
          bundle exec beaker init --hosts hosts.yaml \
            --preserve-hosts always --keyfile ~/.ssh/ssh-id-test \
            --pre-suite pre-suite/configure_type_defaults.rb \
            --tests tests
          # The provision step is still needed here, see notes in the
          # kvm_automation_tooling/templates/beaker-hosts.yaml.epp
          # template...
          bundle exec beaker provision
          bundle exec beaker exec
